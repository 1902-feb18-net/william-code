//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWcfConsumer.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/MySoapService")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RatingField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((this.RatingField.Equals(value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.IService2")]
    public interface IService2 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/AddQuestion", ReplyAction="http://tempuri.org/IService2/AddQuestionResponse")]
        void AddQuestion(MyWcfConsumer.ServiceReference2.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/AddQuestion", ReplyAction="http://tempuri.org/IService2/AddQuestionResponse")]
        System.Threading.Tasks.Task AddQuestionAsync(MyWcfConsumer.ServiceReference2.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetQuestions", ReplyAction="http://tempuri.org/IService2/GetQuestionsResponse")]
        MyWcfConsumer.ServiceReference2.Question[] GetQuestions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetQuestions", ReplyAction="http://tempuri.org/IService2/GetQuestionsResponse")]
        System.Threading.Tasks.Task<MyWcfConsumer.ServiceReference2.Question[]> GetQuestionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetQuestionById", ReplyAction="http://tempuri.org/IService2/GetQuestionByIdResponse")]
        MyWcfConsumer.ServiceReference2.Question GetQuestionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/GetQuestionById", ReplyAction="http://tempuri.org/IService2/GetQuestionByIdResponse")]
        System.Threading.Tasks.Task<MyWcfConsumer.ServiceReference2.Question> GetQuestionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/EditQuestion", ReplyAction="http://tempuri.org/IService2/EditQuestionResponse")]
        void EditQuestion(MyWcfConsumer.ServiceReference2.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/EditQuestion", ReplyAction="http://tempuri.org/IService2/EditQuestionResponse")]
        System.Threading.Tasks.Task EditQuestionAsync(MyWcfConsumer.ServiceReference2.Question question);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/DeleteQuestion", ReplyAction="http://tempuri.org/IService2/DeleteQuestionResponse")]
        void DeleteQuestion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService2/DeleteQuestion", ReplyAction="http://tempuri.org/IService2/DeleteQuestionResponse")]
        System.Threading.Tasks.Task DeleteQuestionAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService2Channel : MyWcfConsumer.ServiceReference2.IService2, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service2Client : System.ServiceModel.ClientBase<MyWcfConsumer.ServiceReference2.IService2>, MyWcfConsumer.ServiceReference2.IService2 {
        
        public Service2Client() {
        }
        
        public Service2Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service2Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddQuestion(MyWcfConsumer.ServiceReference2.Question question) {
            base.Channel.AddQuestion(question);
        }
        
        public System.Threading.Tasks.Task AddQuestionAsync(MyWcfConsumer.ServiceReference2.Question question) {
            return base.Channel.AddQuestionAsync(question);
        }
        
        public MyWcfConsumer.ServiceReference2.Question[] GetQuestions() {
            return base.Channel.GetQuestions();
        }
        
        public System.Threading.Tasks.Task<MyWcfConsumer.ServiceReference2.Question[]> GetQuestionsAsync() {
            return base.Channel.GetQuestionsAsync();
        }
        
        public MyWcfConsumer.ServiceReference2.Question GetQuestionById(int id) {
            return base.Channel.GetQuestionById(id);
        }
        
        public System.Threading.Tasks.Task<MyWcfConsumer.ServiceReference2.Question> GetQuestionByIdAsync(int id) {
            return base.Channel.GetQuestionByIdAsync(id);
        }
        
        public void EditQuestion(MyWcfConsumer.ServiceReference2.Question question) {
            base.Channel.EditQuestion(question);
        }
        
        public System.Threading.Tasks.Task EditQuestionAsync(MyWcfConsumer.ServiceReference2.Question question) {
            return base.Channel.EditQuestionAsync(question);
        }
        
        public void DeleteQuestion(int id) {
            base.Channel.DeleteQuestion(id);
        }
        
        public System.Threading.Tasks.Task DeleteQuestionAsync(int id) {
            return base.Channel.DeleteQuestionAsync(id);
        }
    }
}
